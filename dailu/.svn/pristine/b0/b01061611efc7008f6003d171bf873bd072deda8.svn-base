$(function(){
	var arrival_date=$('#arr_time').val();
	var departure_date=$('#leave_time').val();

	// 翻页
	$("#pagination").pagination( {
		pageCount:5,  
        coping:false,  
        count:1,  
        prevContent:'上一页',  
        nextContent:'下一页', 
        totalData: 100,
    	showData: 6,
   		coping: true ,
        callback:callbackAjax  
	});
                
	function callbackAjax (api){
			// api.getPageCount() 获取总页数
			// api.setPageCount(page) 设置总页数
		var index = api.getCurrent() //获取当前是第几页
		console.log(index)
	}
	// 日历
	var dateInput = ['#arr_time','#leave_time']
		$(dateInput).each(function(i,ele){
			// $(ele).val(getDate())
			$(ele).datepicker({
				minDate: 0,
				dateFormat: "yy-mm-dd"
			});


		});

	$('.hotel_list').on('click',' .list .showBtn',function(){
		$(this).parents('.preview').siblings('.slideWap').toggleClass('hide');
	})

	$('.title_bar a').on('click',function(){
		var selecter = $(this).attr('type');
		var top = $('.'+selecter).offset().top -100;
		$("html,body").animate({scrollTop:top},"slow");  
	})

	$('#leave_time,#arr_time').on('change',function(){
		var date1 = new Date($('#arr_time').val().replace(/-/g,'/'))
		var date2 = new Date($('#leave_time').val().replace(/-/g,'/'))
		day	= (date2-date1)/86400000;
		if(day<=0){
			alert('离店日期须至少晚于入住日期1天')
			var dayEdit  = date1.valueOf()+ 86400000
			$('#leave_time').val(timestampToTime(dayEdit))
			
		}
	})
	$('.hotel_list').on('mouseenter','.qx_type',function(){
			console.log('in')
	}).on('mouseleave','.qx_type',function(){
			console.log('out')
	})
	$('.searchBtn').on('click',function(){
		var query = {};
			query.hotel_id = $('.right_info .title .tit').attr('hotel_id');
        	query.arrival_date = $('#arr_time').val();
        	query.departure_date =$('#leave_time').val();
        	query.map_post = true;
		$.post('getHotelDetail',query,function(res){
			if(!res.Rooms) return false;
			var hotelListRender = template.compile(listTemplate);
			var html = hotelListRender(res);
 			$('.hotel_list ul').html(html)
 			arrival_date=query.arrival_date
			departure_date= query.departure_date
		},'json')
	})

	$('.hotel_list').on('click','.zt.can a',function(){
		var that = this ;
		var toHotelForm ={};
			toHotelForm.img = $('.big_img img').attr('src');
			toHotelForm.hotelName = $('.right_info .title .tit').text();
			toHotelForm.place=$('.right_info .title .loca').text();
			toHotelForm.roomType = $(this).parents('.list').find('.tit').text()+' - '+$(this).parent('.can').siblings('.zc').text();
			toHotelForm.area = $(this).parents('.list').find('.service span:eq(0)').text();
			toHotelForm.bad=$(this).parents('.list').find('.service span:eq(1)').text();
			toHotelForm.floor=$(this).parents('.list').find('.service span:eq(3)').text();
			toHotelForm.perNum=$(this).parents('.list').find('.service span:eq(2)').text();
			toHotelForm.other=$(this).parents('.list').find('.service span:eq(4)').text();
			toHotelForm.tell=$(this).parents('.hotel_list').siblings('.hotelInfo_box').find('.list .tell').text();
			toHotelForm.arrival_date = arrival_date;
			toHotelForm.departure_date = departure_date;
			toHotelForm.tell=$(this).parents('.hotel_list').siblings('.hotelInfo_box').find('.list .tell').text();
			toHotelForm.price=$(this).parent('.zt').siblings('.price').text().substr(1).trim();
			toHotelForm.hotel_id =$('.right_info .title .tit').attr('hotel_id');
			toHotelForm.room_type =$(this).parents('.slide_list').find('.cp').attr('room_type');
			toHotelForm.rate_plan =$(this).parents('.slide_list').find('.cp').attr('rate_plan');
			toHotelForm.total_price =$(this).parents('.slide_list').find('.cp').attr('total_price');
			toHotelForm.rooms_number =1;
			toHotelForm.payment_type =$(this).parents('.slide_list').find('.cp').attr('payment_type');
			toHotelForm.pay_type =$(this).siblings('span').text();
			var query = toHotelForm;
			$.post('hotelVal',query,function(res){
				if(res.ResultCode=='OK'){
					toHotelForm.room_id = $(that).parents('.list').find('.preview .tit').attr('room_id');
					toHotelForm = JSON.stringify(toHotelForm)
					sessionStorage.setItem("toHotelForm",toHotelForm); 
					window.location.href= '/portal/store/hotelform.html';
				}else{
					alert('酒店预订失败，请重新查询后再试')
				}
				
			},'json')
			
	})


	// 地图
		var map1 = new BMap.Map("map_s");
		    map1.enableScrollWheelZoom();
		var center = new BMap.Point($('.title .loca span').attr('lng'),$('.title .loca span').attr('lat'));
	 		map1.centerAndZoom(center, 15);
	 	var myIcon = new BMap.Icon("/static/v1/img/hotel_marker.png", new BMap.Size(20, 53)); //创建marker
		var marker1 = new BMap.Marker(center, {
							icon: myIcon
						});
		var marker2 = new BMap.Marker(center, {
							icon: myIcon
						});
		map1.addOverlay(marker1);              // 将标注添加到地图中\
		var map2 = new BMap.Map("bigmap");
		    map2.enableScrollWheelZoom();
		    // center = new BMap.Point(120.219548, 30.508933);
	 		map2.centerAndZoom(center, 15);

	 	map2.addOverlay(marker2);   




	 		// 定义自定义覆盖物的构造函数  
			function SquareOverlay(point, text){
					    this._center = point;
					    this._text = text;
					
					}
					
					// 继承API的BMap.Overlay
					SquareOverlay.prototype = new BMap.Overlay();
					SquareOverlay.prototype.initialize = function(map2){
					   			// 保存map对象实例
					   			this._map = map2;
					
					   			var textLength = this._text.length
					   			// 创建div元素，作为自定义覆盖物的容器
					   			var div = document.createElement("div");
					   			div.style.position = "absolute";
					   			// 可以根据参数设置元素外观
					   			div.style.width = 12*textLength + "px";
					   			// div.style.height = 20 + "px";
					   			div.style.color = "#333";
					   			div.style.whiteSpace = "nowrap";
					   			div.style.backgroundColor = "#fff";
									//让文字不被选中
								div.style.MozUserSelect = "none";
								div.style.fontSize = "12px";
								div.style.borderRadius = "4px";
								div.style.overflow = "hidden";
							
							var title = document.createElement("div");
								title.style.width = "330px";
					   			title.style.height = "36px";
					   			title.style.lineHeight = "36px";
					   			title.style.paddingLeft = "20px";
					   			title.style.fontWeight = "600";
					   			title.appendChild(document.createTextNode('联系地址'));
								div.appendChild(title);

							var loca = document.createElement("div");
								loca.style.minWidth = "330px";
					   			loca.style.height = "36px";
					   			loca.style.lineHeight = "36px";
					   			loca.style.paddingLeft = "20px";
					   			loca.style.borderTop = "1px solid #e5e5e5";
					   			loca.appendChild(document.createTextNode(this._text));
								div.appendChild(loca);

							
									//创建一个文本节点 
					   			// 将div添加到覆盖物容器中
					   			map2.getPanes().markerPane.appendChild(div);
					   			// 保存div实例
					   			this._div = div;
					   			// 需要将div元素作为方法的返回值，当调用该覆盖物的show、
					   			// hide方法，或者对覆盖物进行移除时，API都将操作此元素。
					   			return div;
					   		}
						// 添加自定义覆盖物   
					
						SquareOverlay.prototype.draw = function(){    
					// 根据地理坐标转换为像素坐标，并设置给容器    
							var position = this._map.pointToOverlayPixel(this._center);
							this._div.style.left = position.x - parseInt(this._div.style.width)/2  + "px";    
							this._div.style.top = position.y-110 + "px";    
							this._div.style.zIndex = -1;    
					
						}

						var mySquare = new SquareOverlay(center,'地址:'+$('.right_info .loca').text()); 
						map2.addOverlay(mySquare);
				
						var listTemplate ='{{each Rooms as value i}}\
												<li class="list">\
												<div class="preview">\
												<div class="tit" room_id="{{value.RoomId}}">{{value.Name}}</div>\
												<div class="service">\
												<span>房间{{value.Area}}㎡</span>\
												<span>{{value.BedType}}</span>\
												<span>可住人数：{{value.Capcity}}人</span>\
												<span>楼层：{{value.Floor}}</span>\
												<span>{{value.Broadnet}}</span>\
												</div>\
												<div class="short">\
												<span class="price">¥ {{value.lowPrice}} <em>起</em></span>\
												<span class="showBtn">报价列表</span>\
												</div>\
												</div>\
												<div class="slideWap">\
												<div class="slide_title">\
												<span class="cp">产品名称</span>\
												<span class="gy">供应商</span>\
												<span class="zc">早餐</span>\
												<span class="qx">取消规则</span>\
												<span class="rj">日均价</span>\
												</div>\
												{{each value.RatePlans as item key}}\
													<div class="slide_list">\
													<span class="cp" hotel_code="{{item.HotelCode}}" room_type="{{item.RoomTypeId}}" payment_type="{{item.PaymentType}}" rate_plan="{{item.RatePlanId}}" total_price="{{item.TotalRate}}">{{item.RatePlanName}}</span>\
													<span class="gy">艺龙</span>\
													<span class="zc">{{item.ValueAdd.TypeCode}}</span>\
													<span class="qx">\
														{{item.PrepayRule.ChangeRule?item.PrepayRule.ChangeRule:(item.GuranteeRule.ChangeRule?item.GuranteeRule.ChangeRule:"免费取消")}}\
													</span>\
													<span class="rj price">¥ {{item.AverageRate}}</span>\
													<span class="zt can"><span class="qx_type">{{#item.payType}} </span> <a href="javascript:;"> 立即预订</a></span>\
													</div>\
												{{/each}}\
												<div class="otherInfo">\
												<div class="otherImg">\
												<img src="{{value.ImageUrl}}" alt="">\
												</div>\
												</div>\
												</div>\
												</li>\
											{{/each}}'

	function timestampToTime(timestamp) { //时间戳转日期
        var date = new Date(timestamp);//时间戳为10位需*1000，时间戳为13位的话不需乘1000
        Y = date.getFullYear() + '-';
        M = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1) + '-';
        // D = date.getDate() + ' ';
        D = (date.getDate() < 10 ? '0'+date.getDate() : date.getDate())+'';
        // h = date.getHours() + ':';
        // m = date.getMinutes() + ':';
        // s = date.getSeconds();
        return Y+M+D;
    }

})



