<?php // +----------------------------------------------------------------------
// | ThinkCMF [ WE CAN DO IT MORE SIMPLE ]
// +----------------------------------------------------------------------
// | Copyright (c) 2013-2017 http://www.thinkcmf.com All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: bingwang <thinkcmf@126.com>
// +----------------------------------------------------------------------
namespace app\spot\controller;
use think\Db;
use cmf\controller\AdminBaseController;

class IntroductionController extends AdminBaseController {
    /********************     景区管理  ======》人文自然 ======》  简要介绍    **********************/
    //简要介绍列表显示
    public function index() {
        vendor('Page.system_page'); //分页
        $p = isset($_GET['page'])?$_GET['page']:1;
        //搜索条件获取
        //  模糊查询
        $where = array();
        if (!empty($_GET['keyword'])) 
        {
            $queryString = $_GET['keyword'];
            if(strlen($queryString) > 0)
            {
                $where = array();
                $where['spot_name']= array('like',"%$queryString%");
            }
        }
        //默认是按照id进行查询的，这里根据是否置顶is_top进行查询显示
        $natureData=Db::name('Nature_absture')->whereOr($where)->page($p.',30')->order('is_top desc')->select();
        $natureResult=json_decode($natureData, true);
        $count = Db::name('Nature_absture')->whereOr($where)->count();
        $Page       =  new \Page($count,30);// 实例化分页类 传入总记录数和每页显示的记录数
        $show       =  $Page->show();// 分页显示输出
        $this->assign('page',$show);// 赋值分页输出
        $this->assign('p',$p); 

        $this->assign('natureResult', $natureResult);
        return $this->fetch();
    } 
    //添加景点简要介绍
    public function add_introduction() {
        //获取省份信息
        $area=$this->getPro();
        $this->assign('area', $area);
        return $this->fetch();
    } 
    //处理添加景点简要介绍
    public function do_add_introduction() {
        if($_POST) {
            $post=$_POST;
            $areaDB=Db::name('Area');
            $introduceData['province_id']=$post['province_id'];
            $introduceData['city_id']=$post['city_id'];
            $introduceData['area_id']=$post['area_id'];
            $introduceData['type']=$post['type'];
            $introduceData['spot_name']=$post['spot_name'];
            $introduceData['longitude']=$post['longitude'];
            $introduceData['latitude']=$post['latitude'];
            $introduceData['spot_Introduction']=$post['spot_Introduction'];
            $introduceData['absture']=$post['absture'];
            $introduceData['suit_season']=$post['suit_season'];
            $introduceData['suit_time']=$post['suit_time'];
            $introduceData['period_time']=$post['period_time'];
            $introduceData['not_modifity']=$post['not_modifity'];

            if(!empty($post['phone']))
            {
                $introduceData['phone']=$post['phone'];
            }
            $introduceData['address']=$post['address'];
            $introduceData['attractions_tickets']=$post['attractions_tickets'];
            if(!empty($post['other_description']))
            {
                $introduceData['other_description']=$post['other_description'];
            }
            
            $introduceData['create_time']=time();
            $introduceData['update_time']=time();
            $introduceData['published_time']=strtotime($post['published_time']);
            // $introduceData['status']=$post['status'];
            $introduceData['attr_score']=$post['attr_score'];
            $introduceData['ranking']=$post['ranking'];
            $introduceData['play_time']=$post['play_time'];
            $cityData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['city_id']))->find();
            $introduceData['city_name']=$cityData['area_name'];
            if($post['area_id'] !='') {
                $areaData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['area_id']))->find();
                $introduceData['area_name']=$areaData['area_name'];
            }
            if ( !empty($post['photo_names']) && !empty($post['photo_urls'])) {
                $introduceData['pic']=[];
                foreach ($post['photo_urls'] as $key=> $url) {
                    $photoUrl=cmf_asset_relative_url($url);
                    array_push($introduceData['pic'], ["url"=> $photoUrl, "name"=> $post['photo_names'][$key]]);
                }
            }
            if(!empty($introduceData['pic']))
            {
               $introduceData['pic']=json_encode($introduceData['pic']);
            }
            
            if ( !empty($post['photo_names2']) && !empty($post['photo_urls2'])) {
                $introduceData['picture2']=[];
                foreach ($post['photo_urls2'] as $key=> $url) {
                    $photoUrl2=cmf_asset_relative_url($url);
                    array_push($introduceData['picture2'], ["url"=> $photoUrl2, "name"=> $post['photo_names2'][$key]]);
                }
            }
            if(!empty($introduceData['picture2']))
            {
               $introduceData['picture2']=json_encode($introduceData['picture2']);
            }
            
            if ( !empty($post['file_names']) && !empty($post['file_urls'])) {
                $introduceData['audio_file']=[];
                foreach ($post['file_urls'] as $key=> $url) {
                    $fileUrl=cmf_asset_relative_url($url);
                    array_push($introduceData['audio_file'], ["url"=> $fileUrl, "name"=> $post['file_names'][$key]]);
                }
            }
            if(!empty($introduceData['audio_file']))
            {
                $introduceData['audio_file']=json_encode($introduceData['audio_file']);
            }
    
            if(Db::name('Nature_absture')->insert($introduceData)) {
                $this->success('保存成功!', url('introduction/index'));
            }
            else {
                $this->success('保存失败!',url('introduction/index'));
            }
        }
    } 
    //编辑人文自然下的 简要介绍
    public function edit_introduction() {
        $str = trim(strrchr($_SERVER["QUERY_STRING"], '/'),'/');
        $page = substr($str,0,strpos($str, '.'));
        $this->assign('page',$page);

        $id=$this->request->param('id',0,'intval');
        $natureAbstureData=Db::name('Nature_absture')->where(array('id'=>$id))->find(); //图片格式处理
        $natureAbstureData['pic11']=json_decode($natureAbstureData['pic'], True);
        $natureAbstureData['picture21']=json_decode($natureAbstureData['picture2'], True); //音频文件处理
        $natureAbstureData['audio_file11']=json_decode($natureAbstureData['audio_file'],True);
        $this->assign('natureAbstureData',$natureAbstureData); 

        //显示省份 
        $areaData=$this->getPro(); //格式是对象里嵌套着数组
        $area=$this->object_to_array($areaData); //对象转换成二维数组
        foreach($area as $key=>&$val) {
            if($val['area_id']==$natureAbstureData['province_id']) {
                $val['status']='selected=selected';
            }
            else {
                $val['status']='';
            }
        }
        $this->assign('area',$area); //显示省份下对应的城市
        $cityListData=$this->getCity($natureAbstureData['province_id']);
        $cityList=$this->object_to_array($cityListData);
        foreach($cityList as &$values) {
            if($values['area_id']==$natureAbstureData['city_id']) {
                $values['status']='selected=selected';
            }
            else {
                $values['status']='';
            }
        }
        $this->assign('cityList',$cityList); //显示城市下对应的区域，县
        $areaListData=$this->getArea($natureAbstureData['city_id']);
        $areaList=$this->object_to_array($areaListData);
        foreach($areaList as &$va) {
            if($va['area_id']==$natureAbstureData['area_id']) {
                $va['status']='selected=selected';
            }
            else {
                $va['status']='';
            }
        }
        $this->assign('areaList',$areaList);
        return $this->fetch();
    } 
    //处理编辑人文自然简要介绍
    public function do_edit_introduction() {
        if($_POST) {
            $post=$_POST;
            $page = $post['page'];
            $areaDB=Db::name('Area');
            $introduceData['province_id']=$post['province_id'];
            $introduceData['city_id']=$post['city_id'];
            $introduceData['area_id']=$post['area_id'];
            $introduceData['type']=$post['type'];
            $introduceData['spot_name']=$post['spot_name'];
            $introduceData['longitude']=$post['longitude'];
            $introduceData['latitude']=$post['latitude'];
            $introduceData['spot_Introduction']=$post['spot_Introduction'];
            $introduceData['absture']=$post['absture'];
            $introduceData['suit_season']=$post['suit_season'];
            $introduceData['suit_time']=$post['suit_time'];
            $introduceData['period_time']=$post['period_time'];
            $introduceData['not_modifity']=$post['not_modifity'];

            if(!empty($post['phone']))
            {
                $introduceData['phone']=$post['phone'];
            }
            
            $introduceData['address']=$post['address'];
            $introduceData['attractions_tickets']=$post['attractions_tickets'];
            if(!empty($post['other_description']))
            {
                $introduceData['other_description']=$post['other_description'];
            }
            
            $introduceData['update_time']=time();
            $introduceData['attr_score']=$post['attr_score'];
            $introduceData['ranking']=$post['ranking'];
            $introduceData['play_time']=$post['play_time'];
            $cityData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['city_id']))->find();
            $introduceData['city_name']=$cityData['area_name'];
            if($post['area_id'] !='') {
                $areaData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['area_id']))->find();
                $introduceData['area_name']=$areaData['area_name'];
            }
            if ( !empty($post['photo_names']) && !empty($post['photo_urls'])) {
                $introduceData['pic']=[];
                foreach ($post['photo_urls'] as $key=>$url) {
                    $photoUrl=cmf_asset_relative_url($url);
                    array_push($introduceData['pic'],["url"=>$photoUrl,"name"=>$post['photo_names'][$key]]);
                }
            }
            if(!empty($introduceData['pic']))
            {
               $introduceData['pic']=json_encode($introduceData['pic']);
            }
            
            if ( !empty($post['photo_names2']) && !empty($post['photo_urls2'])) {
                $introduceData['picture2']=[];
                foreach ($post['photo_urls2'] as $key=>$url) {
                    $photoUrl2=cmf_asset_relative_url($url);
                    array_push($introduceData['picture2'],["url"=>$photoUrl2, "name"=>$post['photo_names2'][$key]]);
                }
            }
            if(!empty($introduceData['picture2']))
            {
               $introduceData['picture2']=json_encode($introduceData['picture2']);
            }

            
            if ( !empty($post['file_names']) && !empty($post['file_urls'])) {
                $introduceData['audio_file']=[];
                foreach ($post['file_urls'] as $key=>$url) {
                    $fileUrl=cmf_asset_relative_url($url);
                    array_push($introduceData['audio_file'],["url"=>$fileUrl,"name"=>$post['file_names'][$key]]);
                }
            }
            if(!empty($introduceData['audio_file']))
            {
                $introduceData['audio_file']=json_encode($introduceData['audio_file']);
            } 

            $where['id']=$post['id'];
            if(Db::name('Nature_absture')->where($where)->update($introduceData)) {
                $this->success('修改成功!',url('/spot/introduction/index.html?page='.$page));
                                        
            }
            else {
                $this->success('修改失败!',url('introduction/index'));
            }
        }
    } 
    //删除人文自然下的 简要介绍
    public function delete_introduction() {
        $param=$this->request->param(); //单个选中删除
        if(isset($param['id'])) {
            if(Db::name('Nature_absture')->where(array('id'=>$param['id']))->delete()) {
                $this->success('删除成功！');
            }
        } 
        //批量选中删除
        if(isset($param['ids'])) {
            $ids=$param['ids'];
            if(Db::name('Nature_absture')->where(['id'=> ['in', $ids]])->delete()) {
                $this->success('删除成功！');
            }
        }
    }
    //置顶 取消（is_top 0-未置顶，1-置顶）
    public function top() {
        $param=$this->request->param();
        if (isset($param['ids']) && isset($param["yes"])) {
            $ids=$this->request->param('ids/a');
            Db::name('Nature_absture')->where(['id'=> ['in', $ids]])->update(['is_top'=> 1]);
            $this->success("置顶成功！",'');
        }
        if (isset($_POST['ids']) && isset($param["no"])) {
            $ids=$this->request->param('ids/a');
            Db::name('Nature_absture')->where(['id'=> ['in', $ids]])->update(['is_top'=> 0]);
            $this->success("取消置顶成功！",'');
        }
    } 
    //人文自然是否发布（1-发布、0-未发布,发布时间随之改变）
    public function publish() {
        $param=$this->request->param();
        if (isset($param['ids']) && isset($param["yes"])) {
            $ids=$this->request->param('ids/a');
            $data['status']=1;
            $data['published_time']=time();
            Db::name('Nature_absture')->where(['id'=> ['in', $ids]])->update($data);
            $this->success("发布成功！", '');
        }
        if (isset($_POST['ids']) && isset($param["no"])) {
            $ids=$this->request->param('ids/a');
            $data['status']=0;
            $data['published_time']=time();
            Db::name('Nature_absture')->where(['id'=> ['in', $ids]])->update($data);
            $this->success("取消发布成功！", '');
        }
    } 
    //打印生成一个6位的随机数
    public function getrandomstring($len,
    $chars=null) {
        if(is_null($chars)) {
            $chars='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        }
        mt_srand(1000*(double)time());
        $str='';
        for($i=0,$lc=strlen($chars)-1;$i<$len;$i++) {
            $str.=$chars[mt_rand(0,$lc)];
        }
        return $str;
    } 
    //对象转换成数组
    public function object_to_array($object) {
        if (is_object($object)) {
            foreach ($object as $key=>$value) {
                $array[$key]=$value;
            }
        }
        else {
            $array=$object;
        }
        return $array;
    } 
    //列出省份信息
    public function getPro() {
        //获取省份信息
        $areaDB=Db::name('Area');
        $where['area_type']=1;
        $where['area_pid']=0;
        $areaArr=$areaDB->where($where)->select();
        return $areaArr;
    } 
    //根据省份id列出 某个省份下的城市列表 
    public function getCity($pro_id) {
        //获取省份信息
        $areaDB=Db::name('Area');
        $where['area_type']=2;
        $where['area_pid']=$pro_id;
        $areaArr=$areaDB->where($where)->select();
        return $areaArr;
    } 
    //根据城市id列出 某个城市下的区域列表 
    public function getArea($city_id) {
        //获取省份信息
        $areaDB=Db::name('Area');
        $where['area_type']=3;
        $where['area_pid']=$city_id;
        $areaArr=$areaDB->where($where)->select();
        return $areaArr;
    } 
    //根据省份获取城市/地区联动
    public function getCityLink() {
        $area_id=$_GET['area_id'];
        $area_type=$_GET['area_type'];
        $areaDB=Db::name('Area');
        $where['area_pid']=$area_id;
        $where['area_type']=$area_type;
        $areas=$areaDB->where($where)->select();
        echo json_encode($areas);
    }

    /********************     景区管理  ======》人文自然 ======》  景区 景点    **********************/
    public function cultural_spot()
    {
        vendor('Page.system_page'); //分页
        $p = isset($_GET['page'])?$_GET['page']:1;
        //  模糊查询
        $where = array();
        if (!empty($_GET['keyword'])) 
        {
            $queryString = $_GET['keyword'];
            if(strlen($queryString) > 0)
            {
                $where['spot_name']= array('like',"%$queryString%");
            }
        }
        //默认是按照id进行查询的，这里根据是否置顶is_top进行查询显示
        $Cultural_spotData=Db::name('Cultural_spot')->whereOr($where)->page($p.',30')->order('is_top desc')->select();
        $Cultural_spotResult=json_decode($Cultural_spotData, true);
        
        $count = Db::name('Cultural_spot')->whereOr($where)->count();
        $Page       =  new \Page($count,30);// 实例化分页类 传入总记录数和每页显示的记录数
        $show       =  $Page->show();// 分页显示输出
        $this->assign('page',$show);// 赋值分页输出
        $this->assign('p',$p); 
        $this->assign('Cultural_spotResult', $Cultural_spotResult);
        return $this->fetch();
    }
    //添加景点简要介绍
    public function add_cultural_spot() {
        //获取省份信息
        $area=$this->getPro();
        $this->assign('area', $area);
        return $this->fetch();
    } 
    //处理添加景点简要介绍
    public function do_add_cultural_spot() {
        if($_POST) {
            $post=$_POST;
            $areaDB=Db::name('Area');
            $cultural_spotData['province_id']=$post['province_id'];
            $cultural_spotData['city_id']=$post['city_id'];
            $cultural_spotData['area_id']=$post['area_id'];
            $cultural_spotData['spot_name']=$post['spot_name'];
            $cultural_spotData['scenic_name']=$post['scenic_name'];
            $cultural_spotData['longitude']=$post['longitude'];
            $cultural_spotData['latitude']=$post['latitude'];
            $cultural_spotData['spot_Introduction']=$post['spot_Introduction'];
            $cultural_spotData['absture']=$post['absture'];
            $cultural_spotData['suit_season']=$post['suit_season'];
            $cultural_spotData['address']=$post['address'];
            $cultural_spotData['create_time']=time();
            $cultural_spotData['update_time']=time();
            $cultural_spotData['published_time']=strtotime($post['published_time']);
            // $cultural_spotData['status']=$post['status'];
            $cultural_spotData['attr_score']=$post['attr_score'];
            $cultural_spotData['play_time']=$post['play_time'];
            $cityData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['city_id']))->find();
            $cultural_spotData['city_name']=$cityData['area_name'];
            if($post['area_id'] !='') {
                $areaData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['area_id']))->find();
                $cultural_spotData['area_name']=$areaData['area_name'];
            }
            if ( !empty($post['photo_names']) && !empty($post['photo_urls'])) {
                $cultural_spotData['pic']=[];
                foreach ($post['photo_urls'] as $key=> $url) {
                    $photoUrl=cmf_asset_relative_url($url);
                    array_push($cultural_spotData['pic'], ["url"=> $photoUrl, "name"=> $post['photo_names'][$key]]);
                }
            }
            if(!empty($cultural_spotData['pic']))
            {
               $cultural_spotData['pic']=json_encode($cultural_spotData['pic']);
            }
            

            if ( !empty($post['photo_names2']) && !empty($post['photo_urls2'])) {
                $cultural_spotData['picture2']=[];
                foreach ($post['photo_urls2'] as $key=> $url) {
                    $photoUrl2=cmf_asset_relative_url($url);
                    array_push($cultural_spotData['picture2'], ["url"=> $photoUrl2, "name"=> $post['photo_names2'][$key]]);
                }
            }
            if(!empty($cultural_spotData['picture2']))
            {
                $cultural_spotData['picture2']=json_encode($cultural_spotData['picture2']);
            }
           

            if(Db::name('Cultural_spot')->insert($cultural_spotData)) {
                $this->success('保存成功!', url('introduction/cultural_spot'));
            }
            else {
                $this->success('保存失败!',url('introduction/cultural_spot'));
            }
        }
    } 
    //编辑人文自然下的 简要介绍
    public function edit_cultural_spot() {
        $str = trim(strrchr($_SERVER["QUERY_STRING"], '/'),'/');
        $page = substr($str,0,strpos($str, '.'));
        $this->assign('page',$page);

        $id=$this->request->param('id',0,'intval');
        $cultural_spotData=Db::name('Cultural_spot')->where(array('id'=>$id))->find(); //图片格式处理
        $cultural_spotData['pic11']=json_decode($cultural_spotData['pic'], True);
        $cultural_spotData['picture21']=json_decode($cultural_spotData['picture2'], True); //音频文件处理
        $this->assign('cultural_spotData',$cultural_spotData); //显示省份 
        $areaData=$this->getPro(); //格式是对象里嵌套着数组
        $area=$this->object_to_array($areaData); //对象转换成二维数组
        //显示省份 
        $areaData=$this->getPro(); //格式是对象里嵌套着数组
        $area=$this->object_to_array($areaData); //对象转换成二维数组
        foreach($area as $key=>&$val) {
            if($val['area_id']==$cultural_spotData['province_id']) {
                $val['status']='selected=selected';
            }
            else {
                $val['status']='';
            }
        }
        $this->assign('area',$area); //显示省份下对应的城市
        $cityListData=$this->getCity($cultural_spotData['province_id']);
        $cityList=$this->object_to_array($cityListData);
        foreach($cityList as &$values) {
            if($values['area_id']==$cultural_spotData['city_id']) {
                $values['status']='selected=selected';
            }
            else {
                $values['status']='';
            }
        }
        $this->assign('cityList',$cityList); //显示城市下对应的区域，县
        $areaListData=$this->getArea($cultural_spotData['city_id']);
        $areaList=$this->object_to_array($areaListData);
        foreach($areaList as &$va) {
            if($va['area_id']==$cultural_spotData['area_id']) {
                $va['status']='selected=selected';
            }
            else {
                $va['status']='';
            }
        }
        $this->assign('areaList',$areaList);
        return $this->fetch();
    } 
    //处理编辑人文自然简要介绍
    public function do_edit_cultural_spot() {
        if($_POST) {
            $post=$_POST;
            $page = $post['page'];
            $areaDB=Db::name('Area');
            $cultural_spotData['province_id']=$post['province_id'];
            $cultural_spotData['city_id']=$post['city_id'];
            $cultural_spotData['area_id']=$post['area_id'];
            $cultural_spotData['spot_name']=$post['spot_name'];
            $cultural_spotData['scenic_name']=$post['scenic_name'];
            $cultural_spotData['longitude']=$post['longitude'];
            $cultural_spotData['latitude']=$post['latitude'];
            $cultural_spotData['spot_Introduction']=$post['spot_Introduction'];
            $cultural_spotData['absture']=$post['absture'];
            $cultural_spotData['suit_season']=$post['suit_season'];
            $cultural_spotData['address']=$post['address'];
            $cultural_spotData['update_time']=time();
            $cultural_spotData['published_time']=strtotime($post['published_time']);
            // $cultural_spotData['status']=$post['status'];
            $cultural_spotData['attr_score']=$post['attr_score'];
            $cultural_spotData['play_time']=$post['play_time'];
            $cityData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['city_id']))->find();
            $cultural_spotData['city_name']=$cityData['area_name'];
            if($post['area_id'] !='') {
                $areaData=$areaDB->field(array('area_name'))->where(array('area_id'=>$post['area_id']))->find();
                $cultural_spotData['area_name']=$areaData['area_name'];
            }
            if ( !empty($post['photo_names']) && !empty($post['photo_urls'])) {
                $cultural_spotData['pic']=[];
                foreach ($post['photo_urls'] as $key=> $url) {
                    $photoUrl=cmf_asset_relative_url($url);
                    array_push($cultural_spotData['pic'], ["url"=> $photoUrl, "name"=> $post['photo_names'][$key]]);
                }
            }
            if(!empty($cultural_spotData['pic']))
            {
               $cultural_spotData['pic']=json_encode($cultural_spotData['pic']);

            }

            if ( !empty($post['photo_names2']) && !empty($post['photo_urls2'])) {
                $cultural_spotData['picture2']=[];
                foreach ($post['photo_urls2'] as $key=> $url) {
                    $photoUrl2=cmf_asset_relative_url($url);
                    array_push($cultural_spotData['picture2'], ["url"=> $photoUrl2, "name"=> $post['photo_names2'][$key]]);
                }
            }
            if(!empty($cultural_spotData['picture2']))
            {
                $cultural_spotData['picture2']=json_encode($cultural_spotData['picture2']);
            }
           

            $where['id']=$post['id'];
            if(Db::name('Cultural_spot')->where($where)->update($cultural_spotData)) {
                $this->success('修改成功!', url('/spot/introduction/cultural_spot.html?page='.$page));
            }
            else {
                $this->success('修改失败!',url('introduction/cultural_spot'));
            }
        }
    } 
    //删除人文景点
    public function delete_cultural_spot() {
        $param=$this->request->param(); //单个选中删除
        if(isset($param['id'])) {
            if(Db::name('Cultural_spot')->where(array('id'=>$param['id']))->delete()) {
                $this->success('删除成功！');
            }
        } 
        //批量选中删除
        if(isset($param['ids'])) {
            $ids=$param['ids'];
            if(Db::name('Cultural_spot')->where(['id'=> ['in', $ids]])->delete()) {
                $this->success('删除成功！');
            }
        }
    }
    //置顶 取消（is_top 0-未置顶，1-置顶）
    public function top2() {
        $param=$this->request->param();
        if (isset($param['ids']) && isset($param["yes"])) {
            $ids=$this->request->param('ids/a');
            Db::name('Cultural_spot')->where(['id'=> ['in', $ids]])->update(['is_top'=> 1]);
            $this->success("置顶成功！",'');
        }
        if (isset($_POST['ids']) && isset($param["no"])) {
            $ids=$this->request->param('ids/a');
            Db::name('Cultural_spot')->where(['id'=> ['in', $ids]])->update(['is_top'=> 0]);
            $this->success("取消置顶成功！",'');
        }
    } 
    //人文自然是否发布（1-发布、0-未发布,发布时间随之改变）
    public function publish2() {
        $param=$this->request->param();
        if (isset($param['ids']) && isset($param["yes"])) {
            $ids=$this->request->param('ids/a');
            $data['status']=1;
            $data['published_time']=time();
            Db::name('Cultural_spot')->where(['id'=> ['in', $ids]])->update($data);
            $this->success("发布成功！", '');
        }
        if (isset($_POST['ids']) && isset($param["no"])) {
            $ids=$this->request->param('ids/a');
            $data['status']=0;
            $data['published_time']=time();
            Db::name('Cultural_spot')->where(['id'=> ['in', $ids]])->update($data);
            $this->success("取消发布成功！", '');
        }
    } 


}